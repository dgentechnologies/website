/**
 * @file Firestore Security Rules for the blogPosts collection.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of access for blog post reads and writes, allowing anonymous users to freely create, read, update, and delete blog posts.
 *
 * Data Structure:
 * Blog posts are stored in the top-level `/blogPosts/{postId}` collection.
 *
 * Key Security Decisions:
 * - Blog posts are fully open, allowing any user (including anonymous users) to create, read, update, and delete any post. This is appropriate for prototyping but should be revisited for a production application.
 * - No user-specific restrictions are enforced.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any user to create, read, update and delete blog posts.
     * @path /blogPosts/{postId}
     * @allow (create) - Any user can create a blog post.
     * @allow (get) - Any user can read a blog post.
     * @allow (update) - Any user can update a blog post.
     * @allow (delete) - Any user can delete a blog post.
     * @principle Allows any user to perform any operation on any blog post, enabling rapid prototyping.
     */
    match /blogPosts/{postId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}